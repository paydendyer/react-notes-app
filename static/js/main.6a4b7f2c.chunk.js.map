{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","trim","NotesList","notes","map","note","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","nanoid","setNotes","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a4b7f2c.chunk.js","sourcesContent":["import React from 'react';\nimport { MdDeleteForever } from 'react-icons/md';\nconst Note = ({ id, text, date, handleDeleteNote }) => {\n  return(\n    <div className=\"note\">\n      <span>{text}</span>\n      <div className=\"note-footer\">\n        <small> {date}</small>\n        <MdDeleteForever \n          onClick={() => handleDeleteNote(id)}\n          className=\"delete-icon\" \n          size=\"1.3em\" \n          />\n      </div>\n    </div>\n  )\n};\n\nexport default Note;","import React from 'react';\nimport { useState } from 'react';\nconst AddNote = ({ handleAddNote }) => {\n  const [noteText, setNoteText] = useState('');\n  const characterLimit = 200;\n\n  const handleChange = (event) => {\n    if(characterLimit - event.target.value.length >=0){\n    setNoteText(event.target.value);\n    }\n  };\n\n  const handleSaveClick = () => {\n    if(noteText.trim().length > 0){\n        handleAddNote(noteText)\n        setNoteText('');\n    }\n  };\n\n  return(<div className=\"note new\">\n    <textarea \n    rows=\"8\" \n    cols=\"10\" \n    placeholder=\"Type to add a note\"\n    value={noteText}\n    onChange={handleChange}\n    ></textarea>\n    <div className=\"note-footer\">\n      <small>{characterLimit - noteText.length} Remaining</small>\n      <button className=\"save\" onClick={handleSaveClick}>Save</button>\n    </div>\n  </div>\n  );\n};\nexport default AddNote;","import React from 'react';\nimport Note from './Note';\nimport AddNote from './AddNote';\nconst NotesList = ({ notes,handleAddNote, handleDeleteNote }) => {\n  return(\n    <div className='notes-list'>\n      {notes.map((note)=> (\n      <Note \n      id={note.id} \n      text={note.text} \n      date={note.date} \n      handleDeleteNote={handleDeleteNote}\n      />\n      ))}\n      <AddNote handleAddNote={handleAddNote} />\n    </div>\n  );\n};\nexport default NotesList;","import React from 'react';\nimport {MdSearch} from 'react-icons/md';\nconst Search = ({ handleSearchNote }) => {\n  return (\n  <div className=\"search\">\n    <MdSearch className=\"search-icons\" size=\"1.3em\" />\n      <input onChange={(event)=>\n        handleSearchNote(event.target.value)\n      }\n        type=\"text\" placeholder=\"type to search\"></input>\n     </div>\n     );\n};\nexport default Search;","import React from 'react';\n\nconst Header = ({ handleToggleDarkMode }) => {\n  return(\n    <div className=\"header\">\n      <h1>Notes</h1>\n      <button onClick={() => \n        handleToggleDarkMode(\n          (previousDarkMode)=> !previousDarkMode\n          )\n          } className=\"save\"\n          >\n            Toggle Mode\n        </button>\n    </div>\n  )\n}\nexport default Header;","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { useState, useEffect } from 'react';\nimport NotesList from './components/NotesList';\nimport Search from './components/Search';\nimport Header from './components/Header';\nconst App = () => {\n  const [notes, setNotes] = useState([\n  {\n    id: nanoid(),\n    text: \"This is my first note!\",\n    date: \"02/14/2022\"\n  },\n  {\n    id: nanoid(),\n    text: \"This is my second note!\",\n    date: \"02/10/2022\"\n  },\n  {\n    id: nanoid(),\n    text: \"This is my third note!\",\n    date: \"02/12/2022\"\n  },\n]);\n\nconst [searchText, setSearchText] = useState('');\n\nconst [darkMode, setDarkMode] = useState(false);\n\nuseEffect(() => {\n  const savedNotes = JSON.parse(\n    localStorage.getItem('react-notes-app-data')\n  );\n\n  if(savedNotes) {\n    setNotes(savedNotes);\n  }\n},[]);\n\nuseEffect(() => {\n  localStorage.setItem('react-notes-app-data', JSON.stringify(notes)\n  );\n}, [notes]);\n\nconst addNote = (text) => {\n  const date = new Date();\n  const newNote = {\n    id: nanoid,\n    text: text,\n    date: date.toLocaleDateString()\n  }\n  const newNotes = [...notes, newNote];\n  setNotes(newNotes);\n};\n\nconst deleteNote = (id) => {\n  const newNotes = notes.filter((note)=> note.id !== id);\n  setNotes(newNotes);\n}\n\n  return ( \n    <div className={`${darkMode && 'dark-mode'}`}>\n      <div className=\"container\">\n      <Header handleToggleDarkMode={setDarkMode} />\n      <Search handleSearchNote={setSearchText}/>\n      <NotesList \n  notes={notes.filter((note)=> \n    note.text.toLowerCase().includes(searchText)\n    )} \n  handleAddNote={addNote}\n  handleDeleteNote={deleteNote}\n  />\n  </div>\n  </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}